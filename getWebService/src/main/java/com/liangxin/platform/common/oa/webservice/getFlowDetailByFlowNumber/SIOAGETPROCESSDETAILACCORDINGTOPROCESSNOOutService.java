package com.liangxin.platform.common.oa.webservice.getFlowDetailByFlowNumber;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-05-16T08:58:36.702+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "SI_OA_GET_PROCESSDETAIL_ACCORDINGTO_PROCESSNO_OutService",
                  wsdlLocation = "classpath:oaConfig/webservice/getFlowDetailByFlowNumber.wsdl",
                  targetNamespace = "urn:nader:com/MOBILE")
public class SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:nader:com/MOBILE", "SI_OA_GET_PROCESSDETAIL_ACCORDINGTO_PROCESSNO_OutService");
    public final static QName HTTPSPort = new QName("urn:nader:com/MOBILE", "HTTPS_Port");
    public final static QName HTTPPort = new QName("urn:nader:com/MOBILE", "HTTP_Port");
    static {
        URL url = null;
        try {
            url = new URL("classpath:oaConfig/webservice/getFlowDetailByFlowNumber.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:oaConfig/webservice/getFlowDetailByFlowNumber.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOutService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut getHTTPSPort() {
        return super.getPort(HTTPSPort, SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut
     */
    @WebEndpoint(name = "HTTPS_Port")
    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut getHTTPSPort(WebServiceFeature... features) {
        return super.getPort(HTTPSPort, SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut.class, features);
    }


    /**
     *
     * @return
     *     returns SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut getHTTPPort() {
        return super.getPort(HTTPPort, SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut
     */
    @WebEndpoint(name = "HTTP_Port")
    public SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut getHTTPPort(WebServiceFeature... features) {
        return super.getPort(HTTPPort, SIOAGETPROCESSDETAILACCORDINGTOPROCESSNOOut.class, features);
    }

}

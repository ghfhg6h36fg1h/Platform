<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangxin.platform.mapper.advise.IUserMapper">
    <resultMap id="BaseResultMap" type="com.liangxin.platform.common.entity.advise.outputResult.user.BaseOutUser">
        <id column="ID_" property="id" jdbcType="VARCHAR"/>
        <result column="NAME_" property="name" jdbcType="VARCHAR"/>
        <result column="PHONE_" property="phone" jdbcType="VARCHAR"/>
        <result column="MAIL_" property="mail" jdbcType="VARCHAR"/>
        <result column="CONFIRMATION_" property="confirmation" jdbcType="VARCHAR"/>
        <result column="ID_CARD_" property="idCard" jdbcType="VARCHAR"/>
        <result column="WORK_ID_" property="workId" jdbcType="VARCHAR"/>
        <result column="WORK_DATE_" property="workDate" jdbcType="TIMESTAMP"/>
        <result column="ENTRY_DATE_" property="entryDate" jdbcType="TIMESTAMP"/>
        <result column="GENDER_" property="gender" jdbcType="DECIMAL"/>
        <result column="IS_VALID_" property="isValid" jdbcType="DECIMAL"/>
        <result column="DELETE_FLAG_" property="deleteFlag" jdbcType="DECIMAL"/>
        <result column="CREATE_TIME_" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME_" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="ADDRESS_" property="address" jdbcType="VARCHAR"/>
        <result column="USER_NAME_" property="userName" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="getByUserName" resultMap="BaseResultMap">
        select * from user_ where user_name_=#{pUserName} and delete_flag_=0
    </select>
    <resultMap id="BaseResultMapRole" type="com.liangxin.platform.common.entity.advise.generate.pt.Role">
        <id column="ID_" property="id" jdbcType="VARCHAR"/>
        <result column="NAME_" property="name" jdbcType="VARCHAR"/>
        <result column="DESC_" property="desc" jdbcType="VARCHAR"/>
        <result column="DISABLE_" property="disable" jdbcType="DECIMAL"/>
        <result column="DELETE_FLAG_" property="deleteFlag" jdbcType="DECIMAL"/>
        <result column="CREATE_TIME_" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME_" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <select id="getRoleByUserId" resultMap="BaseResultMapRole">
        select b.* from user_role_ a  left join  role_ b on a.role_id_=b.id_
        where a.user_id_=#{pUserId} and b.delete_flag_=0
    </select>
    <select id="getUserList" resultMap="BaseResultMap">
        select a.* from user_ a where a.delete_flag_=0
        <if test="pUser.id != null">
            and a.id_ = #{pUser.id,jdbcType=NVARCHAR}
        </if>
        <if test="pUser.name != null">
            and a.name_ LIKE concat('%',#{pUser.name,jdbcType=NVARCHAR},'%')
        </if>
        <if test="pUser.workId != null">
            and a.WORK_ID_ LIKE concat('%',#{pUser.workId,jdbcType=NVARCHAR},'%')
        </if>
        <if test="pUser.isValid != null">
            and a.IS_VALID_ = #{pUser.isValid,jdbcType=INTEGER}
        </if>
        order by a.CREATE_TIME_ desc
    </select>
    <select id="isExistsUser" resultType="java.lang.Integer">
        select count(0) from user_ where delete_flag_=0 and
        <trim prefix="(" suffix=")" suffixOverrides="or">
            <if test="pWorkId != null">
                work_id_=#{pWorkId} or
            </if>
            <if test="pMail != null">
                MAIL_=#{pMail} or
            </if>
            <if test="pUserName != null">
                USER_NAME_=#{pUserName} or
            </if>
            <if test="pIdCard != null">
                ID_CARD_=#{pIdCard} or
            </if>
            <if test="pPhone != null">
                phone_=#{pPhone} or
            </if>
        </trim>
        <if test="pId != null">
            and id_ not in (#{pId})
        </if>
    </select>
    <delete id="delRoleRelationToUser">
        delete from USER_ROLE_  where USER_ID_=#{pUserId}
    </delete>

    <insert id="addUserRole" parameterType="java.util.List">
        insert into USER_ROLE_ (USER_ID_,ROLE_ID_)
       VALUES
        <foreach collection ="pListRoleIds" item="roleId"  separator= "," >
            (#{pUserId,jdbcType=NVARCHAR} ,
            #{roleId,jdbcType=NVARCHAR} )
        </foreach >
    </insert>
    <select id="getByWorkId" resultMap="BaseResultMap">
        select * from user_ where work_id_=#{pWorkId} and delete_flag_=0
    </select>
    <select id="urlActionRight" resultType="java.lang.Integer">
        select count(0)
        from USER_ROLE_ a
        left join ROLE_MENU_ b on a.ROLE_ID_=b.ROLE_ID_
        left join MENU_ c on b.MENU_ID_=c.ID_
        where a.USER_ID_=#{pUserId} and c.action_url_=#{pUrl}
    </select>
</mapper>
